{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\magang-praktek\\\\baru-tes\\\\project-manajuser-master\\\\project-dashboard\\\\src\\\\models\\\\create.user.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Config from '../config/config';\n\nclass form extends Component {\n  /**\n     * \n     * @description konstruktor untuk kelas form \n     */\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        campName: '',\n        campEmail: '',\n        campPhone: '',\n        campPassword: ''\n      },\n      errors: {}\n    };\n  }\n  /**\n   * @description method untuk melakukan validasi setiap data yang diinput pada form create user seperti data tidak boleh kosong, dan syarat-syarat lainnya\n   * @param {string} campName variabel menampung nama\n   * @param {string} campEmail variabel menampung email\n   * @param {string} campPassword variabel menampung password\n   * @param {Integer} campPhone variabel menampung no handphone\n   */\n\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true; //Name\n\n    if (!fields[\"campName\"]) {\n      formIsValid = false;\n      errors[\"campName\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"campName\"] !== \"undefined\") {\n      if (!fields[\"campName\"].match(/^[a-zA-Z\\s]+$/)) {\n        formIsValid = false;\n        errors[\"campName\"] = \"Only letters\";\n      }\n    } //Email\n\n\n    if (!fields[\"campEmail\"]) {\n      formIsValid = false;\n      errors[\"campEmail\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"campEmail\"] !== \"undefined\") {\n      let lastAtPos = fields[\"campEmail\"].lastIndexOf('@');\n      let lastDotPos = fields[\"campEmail\"].lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"campEmail\"].indexOf('@@') == -1 && lastDotPos > 2 && fields[\"campEmail\"].length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"campEmail\"] = \"Email is not valid\";\n      }\n    } //Password\n\n\n    if (!fields[\"campPassword\"]) {\n      formIsValid = false;\n      errors[\"campPassword\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"campPassword\"] !== \"undefined\") {\n      if (!fields[\"campPassword\"].match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/)) {\n        formIsValid = false;\n        errors[\"campPassword\"] = \"Password must contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\";\n      }\n    } //Phone\n\n\n    if (!fields[\"campPhone\"]) {\n      formIsValid = false;\n      errors[\"campPhone\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"campPhone\"] !== \"undefined\") {\n      if (!fields[\"campPhone\"].match(/^(0813|0814|0815|0816|0855|0858|0856|0857|0827|0828|0811|0812|0821|0822|0851|0852|0853|0823|0817|0818|0819|0877|0878|0859|0831|0832|0833|0838|0881|0882|0883|0884|0885|0886|0887|0888|0889|0895|0896|0897|0898|0899)[0-9]{6,8}$/gm)) {\n        formIsValid = false;\n        errors[\"campPhone\"] = \"Phone number is not valid\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n  /**\n   * @description method untuk menyimpan data yang telah valid ke database\n   * @param {*} e menampung data yang telah valid\n   */\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      const datapost = {\n        name: this.state.fields[\"campName\"],\n        email: this.state.fields[\"campEmail\"],\n        phone: this.state.fields[\"campPhone\"],\n        password: this.state.fields[\"campPassword\"],\n        role: this.state.selectRole\n      };\n      const url = Config.baseUrl + \"/users\";\n      axios.post(url, datapost); // alert(\"Form submitted\");\n\n      window.location.href = \"\";\n    } else {\n      // alert(\"Form has errors.\")\n      console.log(this.state);\n    }\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"modal-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"Buat User Baru\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      name: \"contactform\",\n      className: \"contactform\",\n      onSubmit: this.handleSubmit.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputName1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Nama\"), /*#__PURE__*/React.createElement(\"input\", {\n      refs: \"name\",\n      type: \"text\",\n      className: \"form-control\",\n      size: \"30\",\n      placeholder: \"Name\",\n      onChange: this.handleChange.bind(this, \"campName\"),\n      value: this.state.fields[\"campName\"],\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, this.state.errors[\"campName\"])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputHandphone1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, \"No. Handphone\"), /*#__PURE__*/React.createElement(\"input\", {\n      refs: \"phone\",\n      type: \"telp\",\n      className: \"form-control\",\n      size: \"12\",\n      placeholder: \"Phone\",\n      onChange: this.handleChange.bind(this, \"campPhone\"),\n      value: this.state.fields[\"campPhone\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, this.state.errors[\"campPhone\"])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputEmail1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      refs: \"email\",\n      type: \"email\",\n      className: \"form-control\",\n      size: \"30\",\n      placeholder: \"Email\",\n      onChange: this.handleChange.bind(this, \"campEmail\"),\n      value: this.state.fields[\"campEmail\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, this.state.errors[\"campEmail\"])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputPassword1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      refs: \"password\",\n      type: \"password\",\n      className: \"form-control\",\n      size: \"15\",\n      placeholder: \"Password\",\n      onChange: this.handleChange.bind(this, \"campPassword\"),\n      value: this.state.fields[\"campPassword\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"help-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, this.state.errors[\"campPassword\"])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"inputState\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, \"User Role\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"inputState\",\n      className: \"form-control\",\n      onChange: value => this.setState({\n        selectRole: value.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      defaultValue: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }, \"Pilih\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, \"Role 1\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, \"Role 2\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, \"Role 3\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-default\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, \"Batal\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, \"Simpan\")))))))));\n  }\n\n}\n\nexport default form;","map":{"version":3,"sources":["C:/Users/HP/magang-praktek/baru-tes/project-manajuser-master/project-dashboard/src/models/create.user.js"],"names":["React","Component","axios","Config","form","constructor","props","state","fields","campName","campEmail","campPhone","campPassword","errors","handleValidation","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","setState","handleSubmit","e","preventDefault","datapost","name","email","phone","password","role","selectRole","url","baseUrl","post","window","location","href","console","log","handleChange","field","target","value","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Config from '../config/config';\n\nclass form extends Component{\n/**\n   * \n   * @description konstruktor untuk kelas form \n   */\nconstructor(props){\n    super(props);\n    this.state = {\n      fields: {campName:'', campEmail:'', campPhone:'', campPassword:''},\n      errors: {}\n    }\n  }\n\n  /**\n   * @description method untuk melakukan validasi setiap data yang diinput pada form create user seperti data tidak boleh kosong, dan syarat-syarat lainnya\n   * @param {string} campName variabel menampung nama\n   * @param {string} campEmail variabel menampung email\n   * @param {string} campPassword variabel menampung password\n   * @param {Integer} campPhone variabel menampung no handphone\n   */\n  handleValidation(){\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    //Name\n    if(!fields[\"campName\"]){\n      formIsValid = false;\n      errors[\"campName\"] = \"Cannot be empty\";\n    }\n\n    if(typeof fields[\"campName\"] !== \"undefined\"){\n      if(!fields[\"campName\"].match(/^[a-zA-Z\\s]+$/)){\n        formIsValid = false;\n        errors[\"campName\"] = \"Only letters\";\n      }      \t\n    }\n\n    //Email\n    if(!fields[\"campEmail\"]){\n      formIsValid = false;\n      errors[\"campEmail\"] = \"Cannot be empty\";\n    }\n\n    if(typeof fields[\"campEmail\"] !== \"undefined\"){\n      let lastAtPos = fields[\"campEmail\"].lastIndexOf('@');\n      let lastDotPos = fields[\"campEmail\"].lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"campEmail\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"campEmail\"].length - lastDotPos) > 2)) {\n        formIsValid = false;\n        errors[\"campEmail\"] = \"Email is not valid\";\n      }\n    }\n\n    //Password\n    if(!fields[\"campPassword\"]){\n      formIsValid = false;\n      errors[\"campPassword\"] = \"Cannot be empty\";\n    }\n\n    if(typeof fields[\"campPassword\"] !== \"undefined\"){\n      if(!fields[\"campPassword\"].match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/)){\n        formIsValid = false;\n        errors[\"campPassword\"] = \"Password must contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\";\n      }      \t\n    }\n\n    //Phone\n    if(!fields[\"campPhone\"]){\n      formIsValid = false;\n      errors[\"campPhone\"] = \"Cannot be empty\";\n    }\n\n    if(typeof fields[\"campPhone\"] !== \"undefined\"){\n      if(!fields[\"campPhone\"].match(/^(0813|0814|0815|0816|0855|0858|0856|0857|0827|0828|0811|0812|0821|0822|0851|0852|0853|0823|0817|0818|0819|0877|0878|0859|0831|0832|0833|0838|0881|0882|0883|0884|0885|0886|0887|0888|0889|0895|0896|0897|0898|0899)[0-9]{6,8}$/gm)){\n        formIsValid = false;\n        errors[\"campPhone\"] = \"Phone number is not valid\";\n      }      \t\n    }\n\n    this.setState({errors: errors});\n    return formIsValid;\n  }\n\n  /**\n   * @description method untuk menyimpan data yang telah valid ke database\n   * @param {*} e menampung data yang telah valid\n   */\n  handleSubmit(e){\n    e.preventDefault();\n    if(this.handleValidation()){\n      const datapost = {\n        name : this.state.fields[\"campName\"],\n        email : this.state.fields[\"campEmail\"],\n        phone : this.state.fields[\"campPhone\"],\n        password : this.state.fields[\"campPassword\"],\n        role  : this.state.selectRole\n      }\n      const url = Config.baseUrl+\"/users\"\n      axios.post(url,datapost)\n      // alert(\"Form submitted\");\n      window.location.href=\"\";\n    }else{\n      // alert(\"Form has errors.\")\n      console.log(this.state)\n    } \n\n\n  }\n\n  handleChange(field, e){    \t\t\n    let fields = this.state.fields;\n    fields[field] = e.target.value;        \n    this.setState({fields});\n  }\n\n  render(){\n    return (\n      <div className=\"modal fade\" id=\"modal-default\">\n        <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">×</span></button>\n          <h4 className=\"modal-title\">Buat User Baru</h4>\n        </div>\n      <div>\n        <div className=\"box-body\">      \t\n        <form name=\"contactform\" className=\"contactform\" onSubmit= {this.handleSubmit.bind(this)}>\n            <fieldset>\n                <div className=\"form-group\">\n                <label htmlFor=\"exampleInputName1\">Nama</label>\n                  <input refs=\"name\" type=\"text\" className=\"form-control\" size=\"30\" placeholder=\"Name\" onChange={this.handleChange.bind(this, \"campName\")} value={this.state.fields[\"campName\"]} required/>\n                  <span className=\"help-block\">{this.state.errors[\"campName\"]}</span>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputHandphone1\">No. Handphone</label>\n                  <input refs=\"phone\" type=\"telp\" className=\"form-control\" size=\"12\" placeholder=\"Phone\" onChange={this.handleChange.bind(this, \"campPhone\")} value={this.state.fields[\"campPhone\"]}/>\n                  <span className=\"help-block\">{this.state.errors[\"campPhone\"]}</span>\n                </div> \n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputEmail1\">Email</label>\n                  <input refs=\"email\" type=\"email\" className=\"form-control\" size=\"30\" placeholder=\"Email\" onChange={this.handleChange.bind(this, \"campEmail\")} value={this.state.fields[\"campEmail\"]}/>\n                  <span className=\"help-block\">{this.state.errors[\"campEmail\"]}</span>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputPassword1\">Password</label>\n                  <input refs=\"password\" type=\"password\" className=\"form-control\" size=\"15\" placeholder=\"Password\" onChange={this.handleChange.bind(this, \"campPassword\")} value={this.state.fields[\"campPassword\"]}/>\n                  <span className=\"help-block\">{this.state.errors[\"campPassword\"]}</span>\n                </div>\n                <div className=\"form-group\">\n                        <label htmlFor=\"inputState\">User Role</label>\n                        <select id=\"inputState\" className=\"form-control\" onChange={(value)=> this.setState({selectRole:value.target.value})}>\n                            <option defaultValue>Pilih</option>\n                            <option value=\"1\">Role 1</option>\n                            <option value=\"2\">Role 2</option>\n                            <option value=\"3\">Role 3</option>\n                        </select>\n                    </div>\n            </fieldset>\n          \n          \n          <div className=\"col-md-12\">\n            <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Batal</button>\n                        <button type=\"submit\" id=\"submit\" className=\"btn btn-primary\" >Simpan</button>\n                    </div>\n          </div>\n\n        </form>\n        </div>  \n      </div>\n      </div>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default form;"]},"metadata":{},"sourceType":"module"}